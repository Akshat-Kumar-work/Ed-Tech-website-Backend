name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          IMAGE_TAG=latest
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy on EC2
    runs-on: ubuntu-latest
    needs: build-and-push  # This ensures it waits for the build to complete

    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add EC2 host to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: SSH and deploy Docker container
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
            docker stop app || true && docker rm app || true
            docker run -d --name app -p 3000:3000 \
                -e PORT=${{ secrets.PORT }} \
                -e MONGODB_URL=${{ secrets.MONGODB_URL }} \
                -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
                -e FOLDER_NAME=${{ secrets.FOLDER_NAME }} \
                -e CLOUD_NAME=${{ secrets.CLOUD_NAME }} \
                -e API_KEY=${{ secrets.API_KEY }} \
                -e API_SECRET=${{ secrets.API_SECRET }} \
                -e MAIL_HOST=${{ secrets.MAIL_HOST }} \
                -e MAIL_USER=${{ secrets.MAIL_USER }} \
                -e MAIL_PASS=${{ secrets.MAIL_PASS }} \
                -e RAZORPAY_KEY=${{ secrets.RAZORPAY_KEY }} \
                -e RAZORPAY_SECRET=${{ secrets.RAZORPAY_SECRET }} \
                ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
          EOF
